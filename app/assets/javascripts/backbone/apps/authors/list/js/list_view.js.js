// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.AL.module("AuthorsApp.List", function(List, App, Backbone, Marionette, $, _) {

    List.Layout = (function(superClass) {
      extend(Layout, superClass);

      function Layout() {
        return Layout.__super__.constructor.apply(this, arguments);
      }

      Layout.prototype.template = "authors/list/templates/list_layout";

      Layout.prototype.regions = {
        headerRegion: "#header-region",
        authorsRegion: "#authors-region"
      };

      return Layout;

    })(App.Views.Layout);

    List.Header = (function(superClass) {
      extend(Header, superClass);

      function Header() {
        return Header.__super__.constructor.apply(this, arguments);
      }

      Header.prototype.template = "authors/list/templates/_header";

      return Header;

    })(App.Views.ItemView);

    List.Author = (function(superClass) {
      extend(Author, superClass);

      function Author() {
        return Author.__super__.constructor.apply(this, arguments);
      }

      Author.prototype.template = "authors/list/templates/_author";

      Author.prototype.tagName = "span";

      return Author;

    })(App.Views.ItemView);

    List.Authors = (function(superClass) {
      extend(Authors, superClass);

      function Authors() {
        return Authors.__super__.constructor.apply(this, arguments);
      }

      Authors.prototype.template = "authors/list/templates/_authors";

      Authors.prototype.childView = List.Author;

      Authors.prototype.emptyView = List.Empty;

      Authors.prototype.childViewContainer = "authlist";

      return Authors;

    })(App.Views.CompositeView);
    
    return List.Empty = (function(superClass) {
      extend(Empty, superClass);

      function Empty() {
        return Empty.__super__.constructor.apply(this, arguments);
      }

      Empty.prototype.template = "authors/list/templates/_empty";

      Empty.prototype.tagName = "p";

      return Empty;

    })(App.Views.ItemView);
  });

}).call(this);
